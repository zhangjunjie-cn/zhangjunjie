import{_ as E,c as d,a3 as a,L as l,R as s,d as i,b as p,a0 as n,a as g}from"./chunks/framework.DhOjAug6.js";const P=JSON.parse('{"title":"C++语言基础-2","description":"","frontmatter":{"createTime":"2024/1/25","tag":"C++基础,面试"},"headers":[],"relativePath":"笔记/CPP基础/CPP基础-2.md","filePath":"笔记/CPP基础/CPP基础-2.md","lastUpdated":1716471346000}'),y={name:"笔记/CPP基础/CPP基础-2.md"},c=s("h1",{id:"c-语言基础-2",tabindex:"-1"},[i("C++语言基础-2 "),s("a",{class:"header-anchor",href:"#c-语言基础-2","aria-label":'Permalink to "C++语言基础-2"'},"​")],-1),F=p("",13),o=s("li",null,[s("p",null,[s("strong",null,"首先从作用域考虑"),i("：C++里作用域可分为6种：全局，局部，类，语句，命名空间和文件作用域。 全局变量：全局作用域，可以通过extern作用于其他非定义的源文件。 静态全局变量 ：全局作用域+文件作用域，所以无法在其他文件中使用。 局部变量：局部作用域，比如函数的参数，函数内的局部变量等等。 静态局部变量 ：局部作用域，只被初始化一次，直到程序结束。")])],-1),b=s("li",null,[s("p",null,[s("strong",null,"从所在空间考虑"),i("：除了局部变量在栈上外，其他都在静态存储区。因为静态变量都在静态存储区，所以下次调用函数的时候还是能取到原来的值。")])],-1),A=s("li",null,[s("p",null,[s("strong",null,"使用场景"),i("：从它们各自特点就可以看出各自的应用场景，不再赘述。")])],-1),D=p("",12),u=p("",44),m=p("",6);function C(B,_,v,f,L,N){const k=n("ArticleMetadata"),t=n("ClientOnly"),h=n("font"),e=n("NolebaseGitContributors"),r=n("NolebaseGitChangelog");return g(),d("div",null,[c,a(t,null,{default:l(()=>[a(k)]),_:1}),F,s("ol",null,[o,b,s("li",null,[a(h,{color:"#FF0000"},{default:l(()=>[i("生命周期：")]),_:1}),i(" 局部变量在栈上，出了作用域就回收内存；而全局变量、静态全局变量、静态局部变量都在静态存储区，直到程序结束才会回收内存。")]),A]),D,a(h,{color:"#FF0000"},{default:l(()=>[i("先看到实现代码：")]),_:1}),u,a(h,{color:"#FF0000"},{default:l(()=>[i("代码示例")]),_:1}),m,a(e),a(r)])}const x=E(y,[["render",C]]);export{P as __pageData,x as default};
