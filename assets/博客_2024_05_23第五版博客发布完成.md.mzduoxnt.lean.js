import{_ as g,c as F,a3 as a,L as n,R as s,d as i,S as t,b as h,a0 as l,a as u}from"./chunks/framework.DhOjAug6.js";import{a as r,N as p}from"./chunks/theme.Y8OJ-Cqu.js";const b={"carousel-img":"_carousel-img_17cqm_2"},m=s("h1",{id:"第五版博客发布完成",tabindex:"-1"},[i("第五版博客发布完成 "),s("a",{class:"header-anchor",href:"#第五版博客发布完成","aria-label":'Permalink to "第五版博客发布完成"'},"​")],-1),_=s("h2",{id:"_1-技术选型",tabindex:"-1"},[i("1. 技术选型 "),s("a",{class:"header-anchor",href:"#_1-技术选型","aria-label":'Permalink to "1. 技术选型"'},"​")],-1),y=s("p",null,"  我们知道CI/CD（持续集成/持续部署）是一种软件开发实践，旨在加快开发过程、提高软件质量和简化部署流程。",-1),C=s("p",null,"  本项目之初也想集成某种CI/CD技术来提高开发效率和跨平台性编码，最开始采用了 GitHub Actions ，编写deploy.yaml来构建、打包、部署，代码提交事件触发“工作流”（workflows）。但效率并不高，并且没有集成编写 issues 就自动集成到项目日志板块中。",-1),E=s("code",null,"开放式跨平台博客解决方案",-1),B=s("img",{src:"https://gitee.com/zhangjunjiee/article-images/raw/master/images/202405232221241.png"},null,-1),f=s("p",null,"  花里胡哨的，关键是我也不用飞书啊，我就用VSCode来写markdown，typora我感觉也不大方便写笔记(外存储image太拉了)。这让我想起之前公司的同事，使用VSCode的SSH功能远程连接Docker容器进行代码编辑，照样自动化和远程执行，不就是本地维护版本的CI/CD了？（主要是在大四实习的公司，做Java的时候没去在公司wiki里学k8s，倒是学会了一手很棒的git....）",-1),v={class:"tip custom-block"},A=s("p",{class:"custom-block-title"},"在使用过程中你需要下载翻墙工具，来登录github",-1),j=h("",2),D=s("p",null,"从而使得在跨开发平台上，可以轻易编写项目。",-1),x=s("img",{src:"https://gitee.com/zhangjunjiee/article-images/raw/master/images/202405232348538.png"},null,-1),z={class:"tip custom-block"},w=s("p",{class:"custom-block-title"},"这里我们不采用picgo，使用更好的picList",-1),T=h("",6),S=s("code",null,"sh deploy.sh",-1),V=s("img",{src:"https://gitee.com/zhangjunjiee/article-images/raw/master/images/202405232359957.png"},null,-1),N=s("h2",{id:"_3-开发环境工具",tabindex:"-1"},[i("3. 开发环境工具 "),s("a",{class:"header-anchor",href:"#_3-开发环境工具","aria-label":'Permalink to "3. 开发环境工具"'},"​")],-1),P={style:{width:"320px",float:"left"}},I=s("img",{src:"https://gitee.com/zhangjunjiee/article-images/raw/master/images/202405261607705.png"},null,-1),L=s("a",{href:"https://github.com/zzzgydi/clash-verge/releases/download/v1.3.8/Clash.Verge_1.3.8_x64_portable.zip",target:"_blank"},"Clash.Verge_1.3.8_x64_portable.zip ↓",-1),q={style:{width:"320px",float:"left","margin-left":"20px","margin-bottom":"30px"}},G=s("img",{src:"https://gitee.com/zhangjunjiee/article-images/raw/master/images/202405261607705.png"},null,-1),M=s("a",{href:"https://release.piclist.cn/latest/PicList-Setup-2.8.5-x64.exe",target:"_blank"},"PicList-Setup-2.8.5-x64.exe ↓",-1),O=h("",1),R=s("div",{style:{width:"200px",height:"40px","line-height":"40px","text-align":"center","font-size":"14px"}}," 可视高度：3000px ",-1),H=s("div",{style:{width:"200px",height:"40px","line-height":"40px","text-align":"center","font-size":"14px"}}," 改变位置 ",-1),Z=JSON.parse('{"title":"第五版博客发布完成","description":"","frontmatter":{"createTime":"2024/5/23","tag":"建站，日志","outline":[2,3]},"headers":[],"relativePath":"博客/2024/05/23第五版博客发布完成.md","filePath":"博客/2024/05/23第五版博客发布完成.md","lastUpdated":1717924388000}'),J={name:"博客/2024/05/23第五版博客发布完成.md"},U=Object.assign(J,{setup(K){return(Q,W)=>{const k=l("ArticleMetadata"),c=l("ClientOnly"),e=l("VPNolebaseInlineLinkPreview"),d=l("NolebaseGitContributors"),o=l("NolebaseGitChangelog");return u(),F("div",null,[m,a(c,null,{default:n(()=>[a(k)]),_:1}),_,y,C,s("p",null,[i("  第一种方案劝退，于是想到了第二种方案，能否有一个中间件工具，来实现markdown到vitepress平台的持续自动化部署？在逛github中，我发现了一个项目 "),s("u",null,[a(e,{href:"https://elog.1874.cool/",target:"_blank",rel:"noreferrer"},{default:n(()=>[i("Elog")]),_:1})]),i("！！是一种 "),E,i("。")]),B,f,s("p",null,[i("  Elog支持picgo图床，这绝对是最佳的解决方案！但由于我的vitepress定制功能过多，单一的纯markdown是完全不够,于是为了更好的兼容部分Vue代码的编写，"),s("u",null,[a(e,{href:"https://stackblitz.com/",target:"_blank",rel:"noreferrer"},{default:n(()=>[i("StackBlitz")]),_:1})]),i("出现了。StackBlitz 是一个在线的全栈开发环境，它允许开发者在浏览器中直接编写、测试和分享代码。")]),s("div",v,[A,s("p",null,[a(e,{href:"https://github.com/zzzgydi/clash-verge/releases/download/v1.3.8/Clash.Verge_1.3.8_x64_portable.zip",target:"_blank",rel:"noreferrer"},{default:n(()=>[i("-> Clash.Verge_1.3.8_x64_portable.zip")]),_:1})]),j]),D,x,s("div",z,[w,s("p",null,[a(e,{href:"https://release.piclist.cn/latest/PicList-Setup-2.8.5-x64.exe",target:"_blank",rel:"noreferrer"},{default:n(()=>[i("-> picList")]),_:1})])]),T,s("p",null,[i("  在/zhangjunjiee目录下，执行"),S,i("即可。在github项目中就会有一个dist的分支，我们主要使用这个分支进行代码的静态部署。然后在 "),s("u",null,[a(e,{href:"https://app.netlify.com/start",target:"_blank",rel:"noreferrer"},{default:n(()=>[i("Netlify")]),_:1})]),i(" 上指定你github上需要部署的分支，他会自动构建并发布。")]),V,s("p",null,[i("  在 "),s("u",null,[a(e,{href:"https://app.netlify.com/teams/lianyingzi1324/sites",target:"_blank",rel:"noreferrer"},{default:n(()=>[i("https://app.netlify.com/teams/lianyingzi1324/sites")]),_:1})]),i(" 上管理自己的项目，真的太棒了🥳🎉🎉。")]),N,s("div",P,[I,a(t(r),null,{default:n(()=>[L]),_:1})]),s("div",q,[G,a(t(r),null,{default:n(()=>[M]),_:1})]),O,a(t(p),{right:100}),a(t(p),{bottom:100,"visibility-height":3e3},{default:n(()=>[R]),_:1}),a(t(p),{right:40,bottom:160},{default:n(()=>[H]),_:1}),a(d),a(o)])}}}),$={$style:b},ss=g(U,[["__cssModules",$]]);export{Z as __pageData,ss as default};
